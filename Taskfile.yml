# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

vars:
  BLOG_DIR: '{{.ROOT_DIR}}'
  PHP_GUIDE_DIR: '{{.ROOT_DIR}}/code/php-fig-guide'
  POSTS_DIR: '_posts'
  DRAFTS_DIR: '_drafts'
  TEMPLATES_DIR: '_templates'

env:
  JEKYLL_ENV: development

tasks:
  default:
    desc: Show available tasks
    cmds:
      - task --list-all

  serve:
    desc: Start Jekyll development server
    cmds:
      - bundle exec jekyll serve --livereload --drafts
    sources:
      - _posts/**
      - _drafts/**
      - _layouts/**
      - _includes/**
      - assets/**
      - _config.yml
    generates:
      - _site/**

  build:
    desc: Build the Jekyll site for production
    cmds:
      - bundle exec jekyll build
    generates:
      - _site/**

  clean:
    desc: Clean Jekyll build artifacts
    cmds:
      - rm -rf _site
      - rm -rf .jekyll-cache
      - rm -rf .jekyll-metadata

  new-post:
    desc: Create a new blog post
    cmds:
      - ./scripts/new-post.sh -n "{{.CLI_ARGS | first}}" -t "{{.CLI_ARGS | rest | first | default \"standard\"}}"
    silent: true

  publish-draft:
    desc: Publish a draft post
    cmds:
      - ./scripts/publish-draft.sh "{{.CLI_ARGS | first}}"
    silent: true

  list-drafts:
    desc: List all draft posts
    cmds:
      - ls -la {{.DRAFTS_DIR}}/ || echo "No drafts found"

  list-posts:
    desc: List all published posts
    cmds:
      - ls -la {{.POSTS_DIR}}/ | head -20

  bundle-install:
    desc: Install Ruby dependencies
    cmds:
      - bundle install

  bundle-update:
    desc: Update Ruby dependencies
    cmds:
      - bundle update

  php:install:
    desc: Install PHP dependencies
    dir: code/php-fig-guide
    cmds:
      - composer install

  php:test:
    desc: Run PHP tests
    dir: code/php-fig-guide
    cmds:
      - composer test

  php:check-style:
    desc: Check PHP coding standards
    dir: code/php-fig-guide
    cmds:
      - composer check-style

  php:fix-style:
    desc: Fix PHP coding standards
    dir: code/php-fig-guide
    cmds:
      - composer fix-style

  php:analyze:
    desc: Run PHP static analysis
    dir: code/php-fig-guide
    cmds:
      - composer analyze

  validate:
    desc: Run all validation checks
    deps: [validate:content, validate:markdown, validate:yaml]

  validate:content:
    desc: Validate content with Vale
    cmds:
      - vale .
    sources:
      - _posts/**
      - _drafts/**
      - README.md
      - WRITING_STYLE.md

  validate:markdown:
    desc: Validate markdown formatting
    cmds:
      - markdownlint .

  validate:yaml:
    desc: Validate YAML files
    cmds:
      - yamllint .

  validate:php:
    desc: Validate PHP code
    deps: [php:check-style, php:analyze]

  setup:
    desc: Complete project setup
    deps: [setup:ruby, setup:php, setup:tools]

  setup:ruby:
    desc: Setup Ruby environment
    cmds:
      - ./scripts/setup/install-gems.sh
      - bundle install

  setup:php:
    desc: Setup PHP environment
    cmds:
      - ./scripts/setup/install-vale.sh
      - task php:install

  setup:tools:
    desc: Setup development tools
    cmds:
      - ./scripts/setup/install-task.sh
      - ./scripts/install-hooks.sh

  git-hooks:
    desc: Install Git hooks
    cmds:
      - ./scripts/install-hooks.sh

  dev:
    desc: Start development environment
    deps: [bundle-install, php:install]
    cmds:
      - task serve

  test:
    desc: Run all tests and validations
    deps: [validate, php:test]

  deploy:
    desc: Build and prepare for deployment
    deps: [clean, build, validate]

  search:
    desc: Search content
    cmds:
      - ./scripts/search.sh "{{.CLI_ARGS | first}}"
    silent: true

  stats:
    desc: Show project statistics
    cmds:
      - ./scripts/stats.sh

  help:
    desc: Show detailed help
    cmds:
      - ./scripts/help.sh